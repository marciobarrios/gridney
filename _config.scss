// =========================================================================
// Answer these few questions to create your grid according to your needs
// =========================================================================


// Do you want your layout with a FIXED width or FLUID?
// =========================================================================
//$layout: fix; // $layout: fix; or $layout: fluid;


// Please provide some SIZES
// =========================================================================
$container: 960px; // %, em or px, for fluid layouts $container: 100%;
$gutter: 20px; // %, em or px
$min-width: null; // only for fluid layouts
$max-width: null; // only for fluid layouts

// That means it will generate widths until sixths (so you can use .g-5of6 for example),
// you can choose how many sizes to generate
$proportions-limit: 6;


// Do you want to use gridney with SEMANTIC classes OR with EXPLICIT classes?
//
// You can use explicit classes:
// - .grid or .g
// - .g-col
// - .g-1of2
// - ...
//
// Or use it semantically in your scss file:
// - .container { @include grid(); ... }
// - .main { @include gridney-column(2of3); ... }
// - aside { @include gridney-column(1of3); ... }
// =========================================================================
$explicit: true;


// Do you want a RESPONSIVE grid?
// This is to avoid generating too much css if you don't
// need responsive helpers
// =========================================================================
$responsive: true;


// If your grid is RESPONSIVE you need to choose some BREAKPOINTS, Gridney
// provides you some predefined breakpoints but you can add as more as you
// need (mediaqueries definitions are in _mediaqueries.scss)
$breakpoints: $mobile $tablet;

// ----------------------------------------------------
// Breakpoint name  | shortcut | min-width | max-width
// ----------------------------------------------------
// mobile             m          480px
// tablet             t          481px       720px
// ...
